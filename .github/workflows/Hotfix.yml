name: "Hotfix Release - Rebasing Hotfix from Develop onto Master"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The hotfix version to release (e.g., 1.0.1)."
        required: true
        default: "1.0.1"
      release_notes_link:
        description: "Link to the Fibery release notes for the hotfix."
        required: true
        default: "https://your-release-notes-link.com"
      commit_sha:
        description: "The commit SHA from the bugfix branch (if needed)."
        required: true
        default: ""

jobs:
  hotfix-release:
    name: "Create and Propagate Hotfix"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop Branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      - name: Setup Git Config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Create Hotfix Branch from develop
        run: |
          HOTFIX_BRANCH="hotfix/${{ github.event.inputs.version }}"
          echo "Creating branch $HOTFIX_BRANCH from develop..."
          git checkout -b $HOTFIX_BRANCH
          # Optionally, if you need to apply a commit that isn't in develop,
          # uncomment the following lines:
          # echo "Cherry picking commit ${{ github.event.inputs.commit_sha }}..."
          # git cherry-pick -m 1 ${{ github.event.inputs.commit_sha }}

      - name: Bump Version in package.json and app.json
        run: |
          VERSION="${{ github.event.inputs.version }}"
          # Update package.json version using jq
          jq --arg v "$VERSION" '.version = $v' package.json > package.tmp.json && mv package.tmp.json package.json
          # Update app.json if it exists: bump version, increment iOS buildNumber and Android versionCode
          if [ -f app.json ]; then
            jq --arg v "$VERSION" '
              .expo.version = $v |
              .expo.ios.buildNumber = ( .expo.ios.buildNumber | tonumber + 1 | tostring ) |
              .expo.android.versionCode += 1
            ' app.json > app.tmp.json && mv app.tmp.json app.json
          fi

      - name: Commit Version Bump Changes
        run: |
          git add package.json app.json
          git commit --allow-empty --message "Hotfix: Bump version to $VERSION after update"

      - name: Push Hotfix Branch to Origin
        run: git push origin hotfix/${{ github.event.inputs.version }}

      - name: Create Pull Request to develop
        uses: thomaseizinger/create-pull-request@1.4.0
        id: pr-develop
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          head: hotfix/${{ github.event.inputs.version }}
          base: develop
          title: "Propagate Hotfix ${{ github.event.inputs.version }} to develop"
          reviewers: ${{ github.actor }}
          body: |
            This PR propagates the hotfix (including version bump changes) into develop.
            **Fibery Release Notes:** [View here](${{ github.event.inputs.release_notes_link }})

      - name: Create Hotfix Release Branch for Master
        run: |
          RELEASE_BRANCH="hotfix/${{ github.event.inputs.version }}-release"
          echo "Creating release branch $RELEASE_BRANCH from hotfix/${{ github.event.inputs.version }}..."
          git checkout -b $RELEASE_BRANCH
          echo "Rebasing $RELEASE_BRANCH onto master..."
          git rebase --onto master hotfix/${{ github.event.inputs.version }} $RELEASE_BRANCH
          git push --force origin $RELEASE_BRANCH

      - name: Create Pull Request to master
        uses: thomaseizinger/create-pull-request@1.4.0
        id: pr-master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          head: hotfix/${{ github.event.inputs.version }}-release
          base: master
          title: "Hotfix Release ${{ github.event.inputs.version }}"
          reviewers: ${{ github.actor }}
          body: |
            This hotfix release branch was rebased onto master so that only the necessary hotfix changes
            (with version bump updates) are applied to master.
            **Fibery Release Notes:** [View here](${{ github.event.inputs.release_notes_link }})
            Merging this PR into master will deploy the hotfix.
